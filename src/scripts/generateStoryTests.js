import fs from 'fs';
import path from 'path';

const generateAutoTestFileContents = (baseFileName) => `\
/*
WARNING: This file is auto-generated by generateStoryTests.js to include any
stories (and associated coverage) when running vitest. This file should never be
committed; any edits will be overwritten by any \`npm run test*\` commands,
and/or deleted with \`npm run clean\`
*/

import { composeStories } from '@storybook/react';
import { describe, it } from 'vitest';
import * as appStories from './${baseFileName}.stories';

const stories = composeStories(appStories);

describe('${baseFileName}', async () => {
  Object.entries(stories).forEach(([storyName, story]) =>
    it(\`successfully runs story: \${storyName}\`, async () => story.run())
  );
});
`;

function recurseDirectory(dir) {
  const list = fs.readdirSync(dir);

  list.forEach((file) => {
    file = path.resolve(dir, file);
    const stat = fs.statSync(file);

    if (stat && stat.isDirectory()) {
      recurseDirectory(file);
    } else {
      const suffixPosition = file.search(/\.stories\.tsx?/i);
      if (suffixPosition !== -1) {
        const lastSlicePosition = file.lastIndexOf('/');
        const baseFileName = file.slice(lastSlicePosition + 1, suffixPosition);
        const lastCharacter = file.endsWith('x') ? 'x' : '';
        const outputPath = `${file.slice(0, lastSlicePosition)}/${baseFileName}.auto.story.test.ts${lastCharacter}`;
        fs.writeFileSync(
          outputPath,
          generateAutoTestFileContents(baseFileName)
        );
      }
    }
  });
}

const scriptPath = import.meta.dirname.split('/');
const src = scriptPath.slice(0, scriptPath.length - 2).join('/');

recurseDirectory(src);
